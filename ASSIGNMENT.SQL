CREATE DATABASE PRACTICE;
USE PRACTICE;
CREATE TABLE PROGRAMMER(
NAME VARCHAR(10),
DOB DATE,
DOJ DATE,
SEX VARCHAR(10),
PRO1 VARCHAR(10),
PRO2 VARCHAR(10),
SALARY INT(20)
);
INSERT INTO PROGRAMMER VALUES
('ram','1966-08-14','1992-04-22','MALE','pascal','basic',3900),
('raj','1966-09-28','1994-04-22','MALE','dcs','pgdca',3100),
('ramesh','1966-04-30','1997-04-22','MALE','c','cobol',8800),
('rani','1967-09-18','1998-09-11','FEMALE','C++','PASCAL',2299);

CREATE TABLE SOFTWARE (
NAME VARCHAR(10) NOT NULL,
TITLE VARCHAR(10) NOT NULL,
DEV_IN VARCHAR(10) NOT NULL,
S_COST DECIMAL(5,2),
D_COST INT(20),
SOLD INT(20)
);

INSERT INTO SOFTWARE VALUES
('ram','MANGO','MEDIUM',800.99,8000,80),
('raj','JEEP','ADVANCED',699.99,4800,10),
('ramesh','PARACHUTES','MEDIUM',455.99,6100,40),
('rani','MANGO','BASIC',230.99,1300,55);

CREATE TABLE STUDIES (
NAME VARCHAR(10) NOT NULL,
S_PLACE VARCHAR(10) NOT NULL,
COURSE VARCHAR(10) NOT NULL,
C_COST INT(50) NOT NULL
);
INSERT INTO STUDIES VALUES
('ram','BDPS','DCS',4400),
('raj','SABHARI','DTP',5500),
('ramesh','CBE','TALLY',6600),
('rani','CBE','PGDCA',7700);
SELECT AVG(S_COST)   FROM SOFTWARE WHERE DEV_IN = 'pascal';
SELECT NAME  ,TIMESTAMPDIFF(YEAR,DOB,CURDATE()) AS AGE FROM PROGRAMMER;
SELECT  P.NAME, TIMESTAMPDIFF(YEAR,P.DOB,CURDATE()) AS AGE FROM PROGRAMMER AS P INNER JOIN STUDIES AS S ON P.NAME=S.NAME WHERE S.COURSE=’DCS’;
SELECT MAX(SOLD)   FROM SOFTWARE;
SELECT NAME, DOB FROM PROGRAMMER WHERE MONTH(DOB)=4;
SELECT MIN(C_COST)  FROM STUDIES;
SELECT COUNT(*)   FROM STUDIES WHERE COURSE = 'PGDCA';
SELECT SUM(S_COST * SOLD) AS Total_Revenue FROM SOFTWARE WHERE DEV_IN = 'BASIC';
SELECT COUNT(*)   FROM PROGRAMMER AS P INNER JOIN STUDIES AS S ON P.NAME=S.NAME WHERE S.COURSE=’TALLY’;
SELECT COUNT(*)  FROM STUDIES WHERE S_PLACE='CBE';
SELECT * FROM SOFTWARE WHERE (SOLD*S_COST) > 30000;
SELECT NAME, TITLE, CEIL(D_COST/S_COST) AS NoOfCopiesNeeded FROM SOFTWARE;
SELECT MAX(S_COST) AS MAXCOST FROM SOFTWARE WHERE DEV_IN='BASIC';
SELECT * FROM SOFTWARE WHERE (D_COST/S_COST) <= SOLD;
SELECT COUNT(*)  FROM SOFTWARE WHERE DEV_IN='MEDIUM';
SELECT COUNT(*)  FROM STUDIES WHERE S_PLACE='CBE';
SELECT COUNT(*)  FROM STUDIES WHERE C_COST BETWEEN 5000 AND 10000;
SELECT AVG(C_COST) FROM STUDIES;
SELECT *FROM PROGRAMMER WHERE PRO1='C' OR PRO2='C';
SELECT COUNT(*)  FROM PROGRAMMER WHERE PRO1='COBOL' OR PRO2='PASACAL' OR PRO1='PASCAL' OR 'COBOL';
SELECT COUNT(*)  FROM PROGRAMMER WHERE PRO1 NOT IN('PASCAL','C') AND PRO2 NOT IN('PASCAL','C');
SELECT MAX(TIMESTAMPDIFF(YEAR,DOB,CURDATE())) AS OldestMaleProgrammerAge FROM PROGRAMMER WHERE SEX='MALE';
SELECT AVG(TIMESTAMPDIFF(YEAR,DOB,CURDATE())) AS AverageAgeOfFeamleProgrammer FROM PROGRAMMER WHERE SEX='FEMALE';
SELECT NAME,TIMESTAMPDIFF(YEAR,DOJ,CURDATE()) AS Experience FROM PROGRAMMER ORDER BY NAME DESC;
SELECT NAME FROM PROGRAMMER WHERE MONTH(DOB) = MONTH(CURDATE());
SELECT COUNT(*) FROM PROGRAMMER WHERE SEX='FEMALE';
SELECT DISTINCT LANGUAGE FROM (
   SELECT PRO1  FROM PROGRAMMER WHERE SEX='MALE'
   UNION
   SELECT PRO2  FROM PROGRAMMER WHERE SEX='MALE'
) AS KnownLanguage ;
SELECT AVG(SALARY)  FROM PROGRAMMER ;
SELECT COUNT(*) FROM PROGRAMMER WHERE SALARY BETWEEN 2000 AND 4000;
SELECT * FROM PROGRAMMER WHERE PRO1 NOT IN('CLIPPER','COBOL','PASCAL') AND PRO2 NOT IN('CLIPPER','COBOL','PASCAL');
SELECT COUNT(*) FROM PROGRAMMER WHERE TIMESTAMPDIFF(YEAR,DOB,CURDATE())>=25 AND (PRO1='C' OR PRO2='C');
SELECT NAME, DOB FROM PROGRAMMER WHERE DAYOFYEAR(DOB) BETWEEN DAYOFYEAR(CURDATE()) AND DAYOFYEAR(CURDATE() + INTERVAL 1 DAY);
SELECT * FROM PROGRAMMER WHERE TIMESTAMPDIFF(YEAR,DOJ,CURDATE())<5;
SELECT * FROM PROGRAMMER WHERE TIMESTAMPDIFF(YEAR,DOJ,CURDATE()) = 2;
SELECT NAME,TITLE,D_COST-(S_COST*SOLD) FROM SOFTWARE WHERE S_COST*SOLD < D_COST;
SELECT * FROM SOFTWARE WHERE SOLD=40;
SELECT S_COST FROM SOFTWARE WHERE NAME='RANI';
SELECT DISTINCT S_PLACE   FROM STUDIES;
SELECT COUNT(DISTINCT COURSE) FROM STUDIES;
SELECT NAME FROM PROGRAMMER WHERE NAME LIKE '%A%' ;
SELECT NAME FROM PROGRAMMER WHERE LENGTH(NAME) <= 5;
SELECT COUNT(*) FROM PROGRAMMER WHERE SEX='FEMALE' AND (PRO1='C' OR PRO2='COBOL') AND (TIMESTAMPDIFF(YEAR,DOJ,CURDATE())>=0);
SELECT MIN(LENGTH(NAME)) FROM PROGRAMMER;
SELECT AVG(D_COST) FROM SOFTWARE WHERE DEV_IN='PASCAL';
SELECT * FROM PROGRAMMER WHERE DAY(LAST_DAY(DOB))=DAY(DOB);
SELECT SALARY FROM PROGRAMMER WHERE SEX='MALE' AND (PRO1 NOT IN ('COBOL') AND PRO2 NOT IN('COBOL'));
SELECT TITLE, S_COST, D_COST, D_COST-S_COST AS COST_DIFF FROM SOFTWARE ORDER BY COST_DIFF DESC;
SELECT NAME,DOB,DOJ FROM PROGRAMMER WHERE MONTH(DOB)=MONTH(DOJ);
SELECT * FROM SOFTWARE WHERE TITLE LIKE '% %';


SELECT DEV_IN, COUNT(TITLE)FROM SOFTWARE GROUP BY DEV_IN;
SELECT NAME, COUNT(*) FROM SOFTWARE GROUP BY NAME;
SELECT SEX,COUNT(*) FROM PROGRAMMER GROUP BY SEX;
SELECT DEV_IN, MAX(S_COST), MAX(D_COST) FROM SOFTWARE GROUP BY DEV_IN;
SELECT YEAR(DOB),COUNT(*) FROM PROGRAMMER GROUP BY YEAR(DOB);
SELECT YEAR(DOJ),COUNT(*) FROM PROGRAMMER GROUP BY YEAR(DOJ);
SELECT MONTH(DOB),COUNT(*) FROM PROGRAMMER GROUP BY MONTH(DOB);
SELECT MONTH(DOJ),COUNT(*) FROM PROGRAMMER GROUP BY MONTH(DOJ);
SELECT PROF1,COUNT(*) FROM PROGRAMMER GROUP BY PROF1;
SELECT PROF2,COUNT(*) FROM PROGRAMMER GROUP BY PROF2;
SELECT SALARY,COUNT(*) FROM PROGRAMMER GROUP BY SALARY ORDER BY SALARY DESC;
SELECT S_PLACE  , COUNT(*) FROM STUDIES GROUP BY SPLACE;
SELECT COURSE, COUNT(*)  FROM STUDIES GROUP BY COURSE;
SELECT DEV_IN  , SUM(DCOST)   FROM SOFTWARE GROUP BY DEV_IN;
SELECT DEV_IN   , SUM(SCOST)   FROM SOFTWARE GROUP BY DEV_IN;	
SELECT NAME , SUM(DCOST)  FROM SOFTWARE GROUP BY NAME;
SELECT NAME, SUM(SCOST*SOLD)   FROM SOFTWARE GROUP BY NAME;
SELECT NAME, COUNT(TITLE)   FROM SOFTWARE GROUP BY NAME;
SELECT DEV_IN, SUM(SCOST) FROM SOFTWARE GROUP BY DEV_IN;
SELECT  NAME, MIN(DCOST),MAX(DCOST) FROM SOFTWARE GROUP BY NAME;
SELECT DEV_IN, AVG(DCOST)  , AVG(SCOST)  , AVG(SCOST) FROM SOFTWARE GROUP BY DEV_IN;
SELECT SPLACE  , COUNT(COURSE)  , AVG(CCOST)   FROM STUDIES GROUP BY SPLACE;
SELECT SPLACE  , COUNT(NAME)   FROM STUDIES GROUP BY SPLACE;
SELECT  NAME , SEX FROM PROGRAMMER ORDER BY SEX;
SELECT NAME, TITLE  FROM SOFTWARE ORDER BY NAME;
SELECT DEV_IN,COUNT(TITLE) FROM SOFTWARE GROUP BY DEV_IN;
SELECT DEV_IN,COUNT(TITLE) FROM SOFTWARE WHERE DCOST<10000 GROUP BY DEV_IN ; 
SELECT DEV_IN, AVG(DCOST-SCOST) FROM SOFTWARE GROUP BY DEV_IN;
SELECT NAME,SUM(SCOST),SUM(DCOST),SUM(DCOST-(SCOST*SOLD)) FROM SOFTWARE GROUP BY NAME HAVING SUM(DCOST)>SUM(SCOST*SOLD);
SELECT MAX(SALARY),MIN(SALARY),AVG(SALARY) FROM PROGRAMMER WHERE SALARY>2000;


SELECT NAME FROM PROGRAMMER WHERE SALARY= (SELECT MAX(SALARY) FROM PROGRAMMER WHERE PRO1='C' OR PRO2='C');
SELECT NAME FROM PROGRAMMER WHERE SALARY= (SELECT MAX(SALARY) FROM PROGRAMMER WHERE SEX='F' AND (PRO1='COBOL' OR PRO2='COBOL') );
SELECT NAME,PRO1,SALARY FROM PROGRAMMER WHERE (PRO1,SALARY) IN (SELECT PRO1,MAX(SALARY) FROM PROGRAMMER GROUP BY PRO1);
SELECT NAME FROM PROGRAMMER ORDER BY DOJ ASC LIMIT 1;
SELECT NAME FROM PROGRAMMER ORDER BY DOJ DESC LIMIT 1;
SELECT NAME FROM PROGRAMMER WHERE PROF1='DBASE' || PROF2='DBASE' ORDER BY DOB ASC LIMIT 1;
SELECT S_PLACE AS INSTITUTE_WITH_MORE_STUDENTS FROM STUDIES GROUP BY S_PLACE ORDER BY COUNT(NAME) DESC LIMIT 1;
SELECT NAME FROM  STUDIES WHERE S_PLACE= (SELECT SPLACE FROM STUDIES GROUP BY S_PLACE ORDER BY COUNT(NAME) DESC LIMIT 1);
SELECT NAME FROM PROGRAMMER WHERE ( SEX='FEMALE' AND SALARY>3000 AND PRO1 NOT IN ('C','C++','ORACLE','DBASE') AND PRO2 NOT IN ('C','C++','ORACLE','DBASE'));
SELECT COURSE FROM STUDIES ORDER BY C_COST DESC LIMIT 1;
SELECT COURSE FROM STUDIES GROUP BY COURSE ORDER BY COUNT(NAME) DESC  ;
SELECT SPLACE,COURSE,C_COST FROM STUDIES WHERE C_COST< (SELECT AVG(C_COST) FROM STUDIES);
SELECT COURSE FROM STUDIES WHERE C_COST=(SELECT MAX(CCOST) FROM STUDIES);
SELECT COURSE FROM STUDIES WHERE C_COST <= (SELECT AVG(C_COST)+1000 FROM STUDIES) AND C_COST>=(SELECT AVG(C_COST)-1000 FROM STUDIES);
SELECT TITLE FROM SOFTWARE WHERE D_COST= (SELECT MAX(D_COST) FROM SOFTWARE);
SELECT TITLE FROM SOFTWARE WHERE S_COST=(SELECT MIN(S_COST) FROM SOFTWARE);
SELECT NAME FROM SOFTWARE WHERE SOLD=(SELECT MIN(SOLD) FROM SOFTWARE);
SELECT DEV_IN FROM SOFTWARE WHERE SCOST*SOLD = (SELECT MAX(SCOST*SOLD) FROM SOFTWARE);
SELECT COUNT(*) AS LEAST_DIFF FROM SOFTWARE WHERE (D_COST-S_COST) = (SELECT MIN(D_COST-S_COST) FROM SOFTWARE);
SELECT TITLE FROM SOFTWARE WHERE D_COST=(SELECT MAX(D_COST) FROM SOFTWARE);
SELECT DEV_IN FROM SOFTWARE GROUP BY DEV_IN HAVING MAX(DEV_IN) = (SELECT MAX(DEV_IN) FROM SOFTWARE);
SELECT NAME FROM SOFTWARE GROUP BY NAME HAVING MAX(NAME) = (SELECT MAX(NAME) FROM SOFTWARE);
SELECT NAME,DCOST FROM SOFTWARE WHERE DCOST=(SELECT MAX(DCOST) FROM SOFTWARE);
SELECT TITLE FROM SOFTWARE WHERE SOLD<(SELECT AVG(SOLD) FROM SOFTWARE);
SELECT NAME FROM PROGRAMMER WHERE SEX='F' AND SALARY >=(SELECT MAX(SALARY) FROM PROGRAMMER);
SELECT PROF1 FROM PROGRAMMER HAVING PROF1 = (SELECT MAX(PROF1) FROM PROGRAMMER);
SELECT NAME,TITLE,(S_COST*SOLD),D_COST FROM SOFTWARE WHERE (S_COST*SOLD) >= 2*D_COST;
SELECT * FROM PROGRAMMER WHERE SEX='MALE' AND DOB BETWEEN '1965-01-01' AND '1965-12-31' ORDER BY DOB DESC;
SELECT NAME, DEV_IN FROM SOFTWARE WHERE SOLD IN (SELECT MAX(SOLD) FROM SOFTWARE GROUP BY NAME) UNION SELECT NAME, DEV_IN FROM SOFTWARE WHERE SOLD IN (SELECT MIN(SOLD) FROM SOFTWARE GROUP BY NAME);   
SELECT * FROM PROGRAMMER WHERE SEX='FEMALE' AND YEAR(DOJ)=1992 ORDER BY DOB ASC LIMIT 1;
SELECT MAX(YEAR(DOB)) AS MOST_PORGRAMMER_BORN_ON FROM PROGRAMMER;
SELECT MAX(MONTH(DOJ)) AS MOST_PORGRAMMER_BORN_ON FROM PROGRAMMER;
SELECT PROF1, COUNT(*) FROM PROGRAMMER GROUP BY PROF1 ORDER BY COUNT(*) DESC LIMIT 1;
SELECT * FROM PROGRAMMER WHERE SEX='MALE' AND SALARY < (SELECT AVG(SALARY) FROM PROGRAMMER WHERE SEX='FEMALE');




SELECT * FROM PROGRAMMER WHERE SALARY IN (SELECT SALARY FROM PROGRAMMER GROUP BY SALARY HAVING COUNT(*)>1);
SELECT S.* FROM SOFTWARE S INNER JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE P.SEX='MALE' AND P.SALARY>3000;
SELECT * FROM SOFTWARE S INNER JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE S.DEV_IN='C' AND P.SEX='FEMALE';
SELECT * FROM PROGRAMMER WHERE YEAR(DOJ)<1990;
 SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME JOIN STUDIES ST ON S.NAME=ST.NAME WHERE P.SEX='F' AND S.DEV_IN='C' AND ST.SPLACE='PRAGATHI';
SELECT ST.S_PLACE, COUNT(S.TITLE), SUM(S.SOLD), AVG(S.SCOST)FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME = P.NAME JOIN STUDIES ST ON S.NAME = ST.NAME GROUP BY ST.S_PLACE;
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME JOIN STUDIES ST ON S.NAME=ST.NAME WHERE S.DEV_IN='DBASE' AND P.SEX='M' AND ST.S_PLACE = (SELECT S_PLACE FROM STUDIES GROUP BY S_PLACE ORDER BY COUNT(*) DESC LIMIT 1);
SELECT S.*FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE (P.SEX='M' AND YEAR(P.DOB)<1965) OR (P.SEX='F' AND YEAR(P.DOB)>1975);
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE DEV_IN != P.PRO1;
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE DEV_IN <> P.PRO1 AND DEV_IN <> P.PRO2;
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME JOIN STUDIES ST ON S.NAME=ST.NAME WHERE P.SEX='MALE' AND S.DEV_IN='C' AND ST.S_PLACE='CBE';
SELECT NAME FROM PROGRAMMER WHERE NAME NOT IN (SELECT DISTINCT NAME FROM SOFTWARE);
SELECT SUM(S_COST) FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME WHERE S_PLACE='CBE';
SELECT NAME FROM PROGRAMMER WHERE DOJ = (SELECT DOJ FROM PROGRAMMER GROUP BY DOJ HAVING COUNT(*)>1);
SELECT NAME FROM PROGRAMMER WHERE PROF2 = (SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING COUNT(*)>1);
SELECT ST.S_PLACE,SUM(S.S_COST*S.SOLD) FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME GROUP BY ST.S_PLACE;
SELECT ST.S_PLACE,S.D_COST FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME WHERE S.D_COST = (SELECT MAX(D_COST) FROM SOFTWARE ORDER BY D_COST LIMIT 1);
SELECT PRO1 FROM PROGRAMMER WHERE PRO1 NOT IN (SELECT DEV_IN FROM SOFTWARE) 
UNION SELECT PRO2 FROM PROGRAMMER WHERE PRO2 NOT IN (SELECT DEV_IN FROM SOFTWARE) ;
SELECT P.NAME,P.SALARY,ST.COURSE FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME JOIN STUDIES ST ON P.NAME=ST.NAME WHERE S.S_COST=(SELECT S_COST FROM SOFTWARE ORDER BY S_COST DESC LIMIT 1);
SELECT P.NAME, CEIL(ST.C_COST/P.SALARY) AS MONTH_NEEDED_TO_RECOVER FROM PROGRAMMER P JOIN STUDIES ST ON P.NAME=ST.NAME;
SELECT S.TITLE FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME  WHERE (S.D_COST= (SELECT MAX(D_COST) FROM SOFTWARE)) && TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE())>3;
SELECT AVG(P.SALARY) FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME WHERE (S.S_COST*SOLD)>50000;
SELECT COUNT(S.TITLE) FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE P.SEX='FEMALE' AND P.SALARY > (SELECT MAX(SALARY) FROM PROGRAMMER WHERE SEX='MALE');
SELECT COUNT(S.TITLE) FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) = (SELECT TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) FROM SOFTWARE ORDER BY TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) DESC LIMIT 1)
AND (PRO1='BDBS' OR PRO2='BDBS');
SELECT S.NAME,ST.S_PLACE FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME WHERE S.NAME NOT IN (SELECT NAME FROM SOFTWARE);
SELECT COUNT(*) AS NO_OF_PROGRAMMER, SUM(S.S_COST*S.SOLD-S.D_COST) AS PROFIT 
FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE DEV_IN IN (SELECT PRO1 FROM SOFTWARE) GROUP BY DEV_IN;
SELECT NAME,COUNT(TITLE) FROM SOFTWARE GROUP BY NAME;
SELECT P.*,S.*,ST.* FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME JOIN STUDIES ST ON P.NAME=ST.NAME WHERE ST.S_PLACE='S.S.I.L';